{"version":3,"file":"bundle.js","sources":["../node_modules/browserify/node_modules/browser-pack/_prelude.js","../lib/index.js","../lib/WebRtcPeer.js"],"names":["WebRtcPeer","require","exports","defaultOnerror","error","console","noop","mode","localVideo","remoteVideo","onsdpoffer","onerror","videoStream","Object","defineProperty","this","writable","stream","prototype","start","self","pc","RTCPeerConnection","server","options","src","URL","createObjectURL","muted","addStream","constraints","mandatory","OfferToReceiveAudio","undefined","OfferToReceiveVideo","createOffer","offer","log","setLocalDescription","onicecandidate","e","candidate","offerSdp","localDescription","sdp","dispose","close","getAudioTracks","forEach","track","stop","getVideoTracks","userMediaConstraints","audio","video","maxWidth","maxFrameRate","minFrameRate","processSdpAnswer","sdpAnswer","answer","RTCSessionDescription","type","setRemoteDescription","getRemoteStreams","iceServers","url","optional","DtlsSrtpKeyAgreement","onSdp","mediaConstraints","wp","getUserMedia","userStream","startRecvOnly","onError","startSendOnly","startSendRecv","module"],"mappings":"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","sourcesContent":["(function e(t,n,r){function s(o,u){if(!n[o]){if(!t[o]){var a=typeof require==\"function\"&&require;if(!u&&a)return a(o,!0);if(i)return i(o,!0);throw new Error(\"Cannot find module '\"+o+\"'\")}var f=n[o]={exports:{}};t[o][0].call(f.exports,function(e){var n=t[o][1][e];return s(n?n:e)},f,f.exports,e,t,n,r)}return n[o].exports}var i=typeof require==\"function\"&&require;for(var o=0;o<r.length;o++)s(r[o]);return s})","/*\n * (C) Copyright 2014 Kurento (http://kurento.org/)\n *\n * All rights reserved. This program and the accompanying materials\n * are made available under the terms of the GNU Lesser General Public License\n * (LGPL) version 2.1 which accompanies this distribution, and is available at\n * http://www.gnu.org/licenses/lgpl-2.1.html\n *\n * This library is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU\n * Lesser General Public License for more details.\n *\n */\n\n/**\n * @module kurentoUtils\n *\n * @copyright 2013 Kurento (http://kurento.org/)\n * @license LGPL\n */\n\nvar WebRtcPeer = require('./WebRtcPeer');\n\nexports.WebRtcPeer = WebRtcPeer;\n","function defaultOnerror(error) {\n\tif(error) console.error(error);\n}\n\nfunction noop(){};\n\n\nfunction WebRtcPeer(mode, localVideo, remoteVideo, onsdpoffer, onerror, videoStream) {\n\n\tObject.defineProperty(this, 'pc', { writable: true});\n\n\tthis.localVideo = localVideo;\n\tthis.remoteVideo = remoteVideo;\n\tthis.onerror = onerror || defaultOnerror;\n\tthis.stream = videoStream;\n\tthis.mode = mode;\n\tthis.onsdpoffer = onsdpoffer || noop;\n}\n\nWebRtcPeer.prototype.start = function() {\n\n\tvar self = this;\n\n\tif (!this.pc) {\n\t\tthis.pc = new RTCPeerConnection(this.server, this.options);\n\t}\n\n\tvar pc = this.pc;\n\n\tif (this.stream && this.localVideo) {\n\t\tthis.localVideo.src = URL.createObjectURL(this.stream);\n\t\tthis.localVideo.muted = true;\n\t}\n\n\tif (this.stream) {\n\t\tpc.addStream(this.stream);\n\t}\n\n\tthis.constraints =  {\n\t\t\tmandatory: {\n\t\t\t\tOfferToReceiveAudio: (this.remoteVideo !== undefined),\n\t\t\t\tOfferToReceiveVideo: (this.remoteVideo !== undefined)\n\t\t\t}\n\t};\n\n\tpc.createOffer(function(offer) {\n\t\tconsole.log('Created SDP offer');\n\t\tpc.setLocalDescription(offer, function() {\n\t\t\tconsole.log('Local description set');\n\t\t}, self.onerror);\n\n\t}, this.onerror, this.constraints);\n\n\tpc.onicecandidate = function (e) {\n\t\t// candidate exists in e.candidate\n\t\tif (e.candidate) return;\n\n\t\tvar offerSdp = pc.localDescription.sdp;\n\t\tconsole.log('ICE negotiation completed');\n\n\t\tself.onsdpoffer(offerSdp, self);\n//\t\tself.emit('sdpoffer', offerSdp);\n\t};\n\n}\n\nWebRtcPeer.prototype.dispose = function() {\n\tconsole.log('Disposing WebRtcPeer');\n\t//FIXME This is not yet implemented in firefox\n\t//if (this.stream) this.pc.removeStream(this.stream);\n\tthis.pc.close();\n\tif(this.localVideo) this.localVideo.src = '';\n\n\tif(this.stream)\n\t{\n\t\tthis.stream.getAudioTracks().forEach(function(track)\n\t\t{\n\t\t\ttrack.stop()\n\t\t})\n\t\tthis.stream.getVideoTracks().forEach(function(track)\n\t\t{\n\t\t\ttrack.stop()\n\t\t})\n\t}\n};\n\nWebRtcPeer.prototype.userMediaConstraints = {\n\t\taudio : true,\n\t\tvideo : {\n\t\t\tmandatory: {\n\t\t\t\tmaxWidth: 640,\n\t\t\t\tmaxFrameRate : 15,\n\t\t\t\tminFrameRate: 15\n\t\t\t}\n\t\t}\n};\n\nWebRtcPeer.prototype.processSdpAnswer = function(sdpAnswer) {\n\tvar answer = new RTCSessionDescription({\n\t\ttype : 'answer',\n\t\tsdp : sdpAnswer,\n\t});\n\n\tconsole.log('SDP answer received, setting remote description');\n\tvar self = this;\n\tself.pc.setRemoteDescription(answer, function() {\n\t\tif (self.remoteVideo) {\n\t\t\tvar stream = self.pc.getRemoteStreams()[0];\n\t\t\tself.remoteVideo.src = URL.createObjectURL(stream);\n\t\t}\n\t}, this.onerror);\n}\n\nWebRtcPeer.prototype.server = {\n\t\ticeServers : [ {\n\t\t\turl : 'stun:stun.l.google.com:19302'\n\t\t} ]\n};\n\nWebRtcPeer.prototype.options = {\n\t\toptional : [ {\n\t\t\tDtlsSrtpKeyAgreement : true\n\t\t} ]\n};\n\nWebRtcPeer.start = function(mode, localVideo, remoteVideo, onSdp, onerror, mediaConstraints, videoStream) {\n\tvar wp = new WebRtcPeer(mode, localVideo, remoteVideo, onSdp, onerror, videoStream);\n\n\tif (wp.mode !== 'recv' && !wp.stream) {\n\t\tvar constraints = mediaConstraints ?\n\t\t\t\tmediaConstraints : wp.userMediaConstraints;\n\n\t\tgetUserMedia(constraints, function(userStream) {\n\t\t\twp.stream = userStream;\n\t\t\twp.start();\n\t\t}, wp.onerror);\n\t} else {\n\t\twp.start();\n\t}\n\n\treturn wp;\n};\n\nWebRtcPeer.startRecvOnly = function (remoteVideo, onSdp, onError, mediaConstraints) {\n\treturn WebRtcPeer.start('recv', null, remoteVideo, onSdp, onError, mediaConstraints);\n};\n\nWebRtcPeer.startSendOnly = function (localVideo, onSdp, onError, mediaConstraints) {\n\treturn WebRtcPeer.start('send', localVideo, null, onSdp, onError, mediaConstraints);\n};\n\nWebRtcPeer.startSendRecv = function (localVideo, remoteVideo, onSdp, onError, mediaConstraints) {\n\treturn WebRtcPeer.start('sendRecv', localVideo, remoteVideo, onSdp, onError, mediaConstraints);\n};\n\nmodule.exports = WebRtcPeer;\n"]}